services:

  # RabbitMQQQ
#  rabbitmq:
#    networks:
#      - fams
#    container_name: rabbitmq
#    image: rabbitmq:3-management-alpine
#    ports:
#      - 5672:5672 # internal port
#      - 15672:15672 # access in browser port
#    volumes:
#      - /var/lib/rabbitmq




  axonserver:
    image: axoniq/axonserver:2024.0.0-jdk-17
    hostname: axonserver
    volumes:
      - axonserver-data:/data
      - axonserver-events:/eventdata
      - axonserver-config:/config:ro
    ports:
      - "8024:8024"
      - "8124:8124"
      - "8224:8224"
    networks:
      - NTTNetwork


  discovery-svc:
    container_name: discovery-service
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: DiscoveryService/Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - axonserver


  api-gateway:
    container_name: ApiGateway
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      - axonserver
      - discovery-svc


  user-svc:
    container_name: user-service
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: UserService/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - axonserver
      - discovery-svc


  email-svc:
    container_name: email-service
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: EmailService/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - axonserver
      - discovery-svc



#  elasticsearch:
#    container_name: els1
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
#    ports:
#      - 9200:9200
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#    networks:

#  kibana:
#    container_name: kibana1
#    image: docker.elastic.co/kibana/kibana:8.12.0
#    ports:
#      - 8080:8080
#    depends_on:
#      - rabbitmq
#      - elasticsearch


#volumes:
#  axonserver-data:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/data
#      o: bind
#  axonserver-events:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/events
#      o: bind
#  axonserver-config:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/config
#      o: bind
#  accountDBVolumn:
#
volumes:
  axonserver-data:
  axonserver-events:
  axonserver-config:


networks:
  NTTNetwork:
    driver: bridge

