services:

  # RabbitMQQQ
#  rabbitmq:
#    networks:
#      - fams
#    container_name: rabbitmq
#    image: rabbitmq:3-management-alpine
#    ports:
#      - 5672:5672 # internal port
#      - 15672:15672 # access in browser port
#    volumes:
#      - /var/lib/rabbitmq
#  # API Gateway service
#  gateway:
#    networks:
#      - fams
#    build:
#      context: .
#      dockerfile: ./Backend/APIGateway/Dockerfile
#    ports:
#      - 5000:8000




  axonserver-1:
    image: axoniq/axonserver
    hostname: axonserver-1
    environment:
      - AXONIQ_LICENSE=/axonserver/config/axoniq.license
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'
    networks:
      - NTTNetwork



  discovery-svc:
    container_name: discovery-service
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: DiscoveryService/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - axonserver-1
      - discovery-svc


  # user service
  user-svc:
    container_name: user-service
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: UserService/Dockerfile
    ports:
      - 8081:8080
    depends_on:
      - axonserver-1
      - discovery-svc

  # user service
  email-svc:
    container_name: email-service
    networks:
      - NTTNetwork
    build:
      context: .
      dockerfile: EmailService/Dockerfile
    ports:
      - 8082:8080
    depends_on:
      - axonserver-1
      - discovery-svc



#  elasticsearch:
#    container_name: els1
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
#    ports:
#      - 9200:9200
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#    networks:
#      - fams

#  kibana:
#    container_name: kibana1
#    image: docker.elastic.co/kibana/kibana:8.12.0
#    ports:
#      - 8080:8080
#    depends_on:
#      - rabbitmq
#      - elasticsearch




#volumes:
#  axonserver-data1:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/data1
#      o: bind
#  axonserver-events1:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/events1
#      o: bind
#  axonserver-log1:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${PWD}/log1
#      o: bind


networks:
  NTTNetwork:
    driver: bridge

